# =============================================================================
# VPN Server Docker Compose Configuration
# Complete stack with monitoring and web interface
# =============================================================================

version: '3.8'

services:
  # Main VPN Server
  vpn-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secure-vpn-server
    restart: unless-stopped
    
    # Network configuration
    networks:
      - vpn-network
    
    # Port mapping
    ports:
      - "1194:1194/udp"    # OpenVPN
      - "8080:8080/tcp"    # Web Interface
      - "8443:8443/tcp"    # HTTPS Web Interface
    
    # Privileged mode for network operations
    privileged: true
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    
    # Environment variables
    environment:
      - VPN_SERVER_NAME=secure-vpn.local
      - VPN_SERVER_IP=10.8.0.1
      - VPN_CLIENT_NETWORK=10.8.0.0
      - VPN_CLIENT_NETMASK=255.255.255.0
      - VPN_DNS1=8.8.8.8
      - VPN_DNS2=8.8.4.4
      - WEB_ADMIN_USER=admin
      - WEB_ADMIN_PASS=SecureVPN2025!
      - MONITORING_ENABLED=true
      - LOG_LEVEL=INFO
    
    # Volume mounts
    volumes:
      - vpn-config:/etc/openvpn
      - vpn-logs:/var/log/openvpn
      - vpn-certs:/opt/vpn-manager/certificates
      - vpn-secure:/opt/vpn-manager/secure-storage
      - vpn-backups:/opt/vpn-manager/cert-backups
      - ./docker/custom-configs:/opt/vpn-manager/custom:ro
    
    # Device access for TUN/TAP
    devices:
      - /dev/net/tun
    
    # Health check
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Monitoring Dashboard
  vpn-monitor:
    build:
      context: ./docker/monitoring
      dockerfile: Dockerfile
    container_name: vpn-monitoring
    restart: unless-stopped
    
    networks:
      - vpn-network
    
    ports:
      - "3000:3000/tcp"    # Monitoring Dashboard
    
    environment:
      - VPN_SERVER_HOST=vpn-server
      - VPN_SERVER_PORT=8080
      - REFRESH_INTERVAL=10
      - ALERT_EMAIL=admin@example.com
    
    volumes:
      - monitoring-data:/opt/monitoring/data
      - vpn-logs:/var/log/openvpn:ro
    
    depends_on:
      - vpn-server
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database for user management and logs
  vpn-database:
    image: postgres:15-alpine
    container_name: vpn-database
    restart: unless-stopped
    
    networks:
      - vpn-network
    
    environment:
      - POSTGRES_DB=vpndb
      - POSTGRES_USER=vpnuser
      - POSTGRES_PASSWORD=VPNSecure2025!
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vpnuser -d vpndb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and caching
  vpn-redis:
    image: redis:7-alpine
    container_name: vpn-redis
    restart: unless-stopped
    
    networks:
      - vpn-network
    
    command: redis-server --appendonly yes --requirepass RedisVPN2025!
    
    volumes:
      - redis-data:/data
    
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  vpn-proxy:
    image: nginx:alpine
    container_name: vpn-proxy
    restart: unless-stopped
    
    networks:
      - vpn-network
    
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    
    depends_on:
      - vpn-server
      - vpn-monitor
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  vpn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  vpn-config:
    driver: local
  vpn-logs:
    driver: local
  vpn-certs:
    driver: local
  vpn-secure:
    driver: local
  vpn-backups:
    driver: local
  monitoring-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local
